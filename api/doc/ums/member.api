syntax = "v1"

// import {CommonResp, CommonListReq, CommonListResp, CommonData} from "com/common.api"

info(
    title: "Zdmin"
    desc: "Admin based on go-zero"
    author: "Loocor"
    email: "loocor@gmail.com"
    version: "1.0.0"
)

type (
    MemberData struct {
        MemberLevelId int64 `json:"memberLevelId"`                               // 会员级别 ID
        Username string `json:"username"`                                        // 用户名
        Password string `json:"password"`                                        // 密码
        Nickname string `json:"nickname, optional"`                              // 昵称
        Phone string `json:"phone"`                                              // 手机号码
        IdNumber string `json:"idNumber, optional"`                              // 身份证号
        Status int64 `json:"status, default=1"`                                  // 帐号启用状态: 0->禁用; 1->启用
        Icon string `json:"icon, optional"`                                      // 头像
        Gender int64 `json:"gender, default=0"`                                  // 性别: 0->未知; 1->男; 2->女
        Birthday string `json:"birthday, optional"`                              // 生日
        Email string `json:"email, optional"`                                    // 电邮
        City string `json:"city, optional"`                                      // 城市
        Job string `json:"job, optional"`                                        // 职业
        PersonalizedSignature string `json:"personalizedSignature, optional"`    // 签名
        SourceType int64 `json:"sourceType"`                                     // 来源
        Integration int64 `json:"integration, default=0"`                        // 积分值
        Growth int64 `json:"growth, default=0"`                                  // 成长值
        LuckyCount int64 `json:"luckyCount, default=0"`                          // 剩余抽奖次数
        HistoryIntegration int64 `json:"historyIntegration"`                     // 历史积分数量
        CommonData
    }

    MemberAddReq struct {
        MemberData
    }

    MemberAddResp struct {
        CommonResp
    }

    MemberListReq struct {
        CommonListReq
    }

    MemberListResp struct {
        Data []*MemberData `json:"data"`
        CommonListResp
    }

    MemberUpdateReq struct {
        MemberData
    }

    MemberUpdateResp struct {
        CommonResp
    }

    MemberDeleteReq struct {
        Id int64 `json:"id"`
    }

    MemberDeleteResp struct {
        CommonResp
    }
)

@server(
    jwt: Auth
    group: member/member
)
service admin-api {
    @doc "新增会员"
    @handler MemberAdd
    post /api/member/member/add (MemberAddReq) returns (MemberAddResp)

    @doc "会员列表"
    @handler MemberList
    get /api/member/member/list (MemberListReq) returns (MemberListResp)

    @doc "更新会员"
    @handler MemberUpdate
    post /api/member/member/update (MemberUpdateReq) returns (MemberUpdateResp)

    @doc "删除会员"
    @handler MemberDelete
    post /api/member/member/delete (MemberDeleteReq) returns (MemberDeleteResp)
}
