syntax = "v1"

// import {CommonResp, CommonListReq, CommonListResp, CommonData} from "com/common.api"

info(
    title: "Zdmin"
    desc: "Admin based on go-zero"
    author: "Loocor"
    email: "loocor@gmail.com"
    version: "1.0.0"
)

type (
    MemberLevelData struct {
        Name string `json:"name"`                                       // 会员级别名称
        GrowthPoint int64 `json:"growthPoint"`                          // 成长点值
        IsDefault int64 `json:"isDefault"`                              // 是否为默认等级: 0->不是; 1->是
        FreeFreightPoint float64 `json:"freeFreightPoint"`              // 免运费标准
        CommentGrowthPoint int64 `json:"commentGrowthPoint"`            // 每次评价获取的成长值
        PriviledgeFreeFreight int64 `json:"priviledgeFreeFreight"`      // 是否有免邮特权
        PriviledgeSignIn int64 `json:"priviledgeSignIn"`                // 是否有签到特权
        PriviledgeComment int64 `json:"priviledgeComment"`              // 是否有评论获奖励特权
        PriviledgePromotion int64 `json:"priviledgePromotion"`          // 是否有专享活动特权
        PriviledgeMemberPrice int64 `json:"priviledgeMemberPrice"`      // 是否有会员价格特权
        PriviledgeBirthday int64 `json:"priviledgeBirthday"`            // 是否有生日特权
        Note string `json:"note"`                                       // 备注
        CommonData
    }

    MemberLevelAddReq struct {
        MemberLevelData
    }

    MemberLevelAddResp struct {
        CommonResp
    }

    MemberLevelListReq struct {
        CommonListReq
    }

    MemberLevelListResp struct {
        Data []*MemberLevelData `json:"data"`
        CommonListResp
    }

    MemberLevelUpdateReq struct {
        MemberLevelData
    }

    MemberLevelUpdateResp struct {
        CommonResp
    }

    MemberLevelDeleteReq struct {
        Id int64 `json:"id"`
    }

    MemberLevelDeleteResp struct {
        CommonResp
    }
)

@server(
    group: member/level
)
service admin-api {
    @doc "新增会员级别"
    @handler MemberLevelAdd
    post /api/member/level/add (MemberLevelAddReq) returns (MemberLevelAddResp)

    @doc "会员级别列表"
    @handler MemberLevelList
    get /api/member/level/list (MemberLevelListReq) returns (MemberLevelListResp)

    @doc "更新会员级别"
    @handler MemberLevelUpdate
    post /api/member/level/update (MemberLevelUpdateReq) returns (MemberLevelUpdateResp)

    @doc "删除会员级别"
    @handler MemberLevelDelete
    post /api/member/level/delete (MemberLevelDeleteReq) returns (MemberLevelDeleteResp)
}
