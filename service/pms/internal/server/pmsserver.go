// Code generated by goctl. DO NOT EDIT!
// Source: pms.proto

package server

import (
	"context"

	"go-zero-admin/service/pms/internal/logic"
	"go-zero-admin/service/pms/internal/svc"
	"go-zero-admin/service/pms/pms"
)

type PmsServer struct {
	svcCtx *svc.ServiceContext
}

func NewPmsServer(svcCtx *svc.ServiceContext) *PmsServer {
	return &PmsServer{
		svcCtx: svcCtx,
	}
}

func (s *PmsServer) ProductAdd(ctx context.Context, in *pms.ProductAddReq) (*pms.ProductAddResp, error) {
	l := logic.NewProductAddLogic(ctx, s.svcCtx)
	return l.ProductAdd(in)
}

func (s *PmsServer) ProductList(ctx context.Context, in *pms.ProductListReq) (*pms.ProductListResp, error) {
	l := logic.NewProductListLogic(ctx, s.svcCtx)
	return l.ProductList(in)
}

func (s *PmsServer) ProductUpdate(ctx context.Context, in *pms.ProductUpdateReq) (*pms.ProductUpdateResp, error) {
	l := logic.NewProductUpdateLogic(ctx, s.svcCtx)
	return l.ProductUpdate(in)
}

func (s *PmsServer) ProductDelete(ctx context.Context, in *pms.ProductDeleteReq) (*pms.ProductDeleteResp, error) {
	l := logic.NewProductDeleteLogic(ctx, s.svcCtx)
	return l.ProductDelete(in)
}

func (s *PmsServer) AlbumAdd(ctx context.Context, in *pms.AlbumAddReq) (*pms.AlbumAddResp, error) {
	l := logic.NewAlbumAddLogic(ctx, s.svcCtx)
	return l.AlbumAdd(in)
}

func (s *PmsServer) AlbumList(ctx context.Context, in *pms.AlbumListReq) (*pms.AlbumListResp, error) {
	l := logic.NewAlbumListLogic(ctx, s.svcCtx)
	return l.AlbumList(in)
}

func (s *PmsServer) AlbumUpdate(ctx context.Context, in *pms.AlbumUpdateReq) (*pms.AlbumUpdateResp, error) {
	l := logic.NewAlbumUpdateLogic(ctx, s.svcCtx)
	return l.AlbumUpdate(in)
}

func (s *PmsServer) AlbumDelete(ctx context.Context, in *pms.AlbumDeleteReq) (*pms.AlbumDeleteResp, error) {
	l := logic.NewAlbumDeleteLogic(ctx, s.svcCtx)
	return l.AlbumDelete(in)
}

func (s *PmsServer) AlbumPicAdd(ctx context.Context, in *pms.AlbumPicAddReq) (*pms.AlbumPicAddResp, error) {
	l := logic.NewAlbumPicAddLogic(ctx, s.svcCtx)
	return l.AlbumPicAdd(in)
}

func (s *PmsServer) AlbumPicList(ctx context.Context, in *pms.AlbumPicListReq) (*pms.AlbumPicListResp, error) {
	l := logic.NewAlbumPicListLogic(ctx, s.svcCtx)
	return l.AlbumPicList(in)
}

func (s *PmsServer) AlbumPicUpdate(ctx context.Context, in *pms.AlbumPicUpdateReq) (*pms.AlbumPicUpdateResp, error) {
	l := logic.NewAlbumPicUpdateLogic(ctx, s.svcCtx)
	return l.AlbumPicUpdate(in)
}

func (s *PmsServer) AlbumPicDelete(ctx context.Context, in *pms.AlbumPicDeleteReq) (*pms.AlbumPicDeleteResp, error) {
	l := logic.NewAlbumPicDeleteLogic(ctx, s.svcCtx)
	return l.AlbumPicDelete(in)
}

func (s *PmsServer) BrandAdd(ctx context.Context, in *pms.BrandAddReq) (*pms.BrandAddResp, error) {
	l := logic.NewBrandAddLogic(ctx, s.svcCtx)
	return l.BrandAdd(in)
}

func (s *PmsServer) BrandList(ctx context.Context, in *pms.BrandListReq) (*pms.BrandListResp, error) {
	l := logic.NewBrandListLogic(ctx, s.svcCtx)
	return l.BrandList(in)
}

func (s *PmsServer) BrandUpdate(ctx context.Context, in *pms.BrandUpdateReq) (*pms.BrandUpdateResp, error) {
	l := logic.NewBrandUpdateLogic(ctx, s.svcCtx)
	return l.BrandUpdate(in)
}

func (s *PmsServer) BrandDelete(ctx context.Context, in *pms.BrandDeleteReq) (*pms.BrandDeleteResp, error) {
	l := logic.NewBrandDeleteLogic(ctx, s.svcCtx)
	return l.BrandDelete(in)
}

func (s *PmsServer) CommentAdd(ctx context.Context, in *pms.CommentAddReq) (*pms.CommentAddResp, error) {
	l := logic.NewCommentAddLogic(ctx, s.svcCtx)
	return l.CommentAdd(in)
}

func (s *PmsServer) CommentList(ctx context.Context, in *pms.CommentListReq) (*pms.CommentListResp, error) {
	l := logic.NewCommentListLogic(ctx, s.svcCtx)
	return l.CommentList(in)
}

func (s *PmsServer) CommentUpdate(ctx context.Context, in *pms.CommentUpdateReq) (*pms.CommentUpdateResp, error) {
	l := logic.NewCommentUpdateLogic(ctx, s.svcCtx)
	return l.CommentUpdate(in)
}

func (s *PmsServer) CommentDelete(ctx context.Context, in *pms.CommentDeleteReq) (*pms.CommentDeleteResp, error) {
	l := logic.NewCommentDeleteLogic(ctx, s.svcCtx)
	return l.CommentDelete(in)
}

func (s *PmsServer) CommentReplayAdd(ctx context.Context, in *pms.CommentReplayAddReq) (*pms.CommentReplayAddResp, error) {
	l := logic.NewCommentReplayAddLogic(ctx, s.svcCtx)
	return l.CommentReplayAdd(in)
}

func (s *PmsServer) CommentReplayList(ctx context.Context, in *pms.CommentReplayListReq) (*pms.CommentReplayListResp, error) {
	l := logic.NewCommentReplayListLogic(ctx, s.svcCtx)
	return l.CommentReplayList(in)
}

func (s *PmsServer) CommentReplayUpdate(ctx context.Context, in *pms.CommentReplayUpdateReq) (*pms.CommentReplayUpdateResp, error) {
	l := logic.NewCommentReplayUpdateLogic(ctx, s.svcCtx)
	return l.CommentReplayUpdate(in)
}

func (s *PmsServer) CommentReplayDelete(ctx context.Context, in *pms.CommentReplayDeleteReq) (*pms.CommentReplayDeleteResp, error) {
	l := logic.NewCommentReplayDeleteLogic(ctx, s.svcCtx)
	return l.CommentReplayDelete(in)
}

func (s *PmsServer) FreightTemplateAdd(ctx context.Context, in *pms.FreightTemplateAddReq) (*pms.FreightTemplateAddResp, error) {
	l := logic.NewFreightTemplateAddLogic(ctx, s.svcCtx)
	return l.FreightTemplateAdd(in)
}

func (s *PmsServer) FreightTemplateList(ctx context.Context, in *pms.FreightTemplateListReq) (*pms.FreightTemplateListResp, error) {
	l := logic.NewFreightTemplateListLogic(ctx, s.svcCtx)
	return l.FreightTemplateList(in)
}

func (s *PmsServer) FreightTemplateUpdate(ctx context.Context, in *pms.FreightTemplateUpdateReq) (*pms.FreightTemplateUpdateResp, error) {
	l := logic.NewFreightTemplateUpdateLogic(ctx, s.svcCtx)
	return l.FreightTemplateUpdate(in)
}

func (s *PmsServer) FreightTemplateDelete(ctx context.Context, in *pms.FreightTemplateDeleteReq) (*pms.FreightTemplateDeleteResp, error) {
	l := logic.NewFreightTemplateDeleteLogic(ctx, s.svcCtx)
	return l.FreightTemplateDelete(in)
}

func (s *PmsServer) MemberPriceAdd(ctx context.Context, in *pms.MemberPriceAddReq) (*pms.MemberPriceAddResp, error) {
	l := logic.NewMemberPriceAddLogic(ctx, s.svcCtx)
	return l.MemberPriceAdd(in)
}

func (s *PmsServer) MemberPriceList(ctx context.Context, in *pms.MemberPriceListReq) (*pms.MemberPriceListResp, error) {
	l := logic.NewMemberPriceListLogic(ctx, s.svcCtx)
	return l.MemberPriceList(in)
}

func (s *PmsServer) MemberPriceUpdate(ctx context.Context, in *pms.MemberPriceUpdateReq) (*pms.MemberPriceUpdateResp, error) {
	l := logic.NewMemberPriceUpdateLogic(ctx, s.svcCtx)
	return l.MemberPriceUpdate(in)
}

func (s *PmsServer) MemberPriceDelete(ctx context.Context, in *pms.MemberPriceDeleteReq) (*pms.MemberPriceDeleteResp, error) {
	l := logic.NewMemberPriceDeleteLogic(ctx, s.svcCtx)
	return l.MemberPriceDelete(in)
}

func (s *PmsServer) ProductAttributeCategoryAdd(ctx context.Context, in *pms.ProductAttributeCategoryAddReq) (*pms.ProductAttributeCategoryAddResp, error) {
	l := logic.NewProductAttributeCategoryAddLogic(ctx, s.svcCtx)
	return l.ProductAttributeCategoryAdd(in)
}

func (s *PmsServer) ProductAttributeCategoryList(ctx context.Context, in *pms.ProductAttributeCategoryListReq) (*pms.ProductAttributeCategoryListResp, error) {
	l := logic.NewProductAttributeCategoryListLogic(ctx, s.svcCtx)
	return l.ProductAttributeCategoryList(in)
}

func (s *PmsServer) ProductAttributeCategoryUpdate(ctx context.Context, in *pms.ProductAttributeCategoryUpdateReq) (*pms.ProductAttributeCategoryUpdateResp, error) {
	l := logic.NewProductAttributeCategoryUpdateLogic(ctx, s.svcCtx)
	return l.ProductAttributeCategoryUpdate(in)
}

func (s *PmsServer) ProductAttributeCategoryDelete(ctx context.Context, in *pms.ProductAttributeCategoryDeleteReq) (*pms.ProductAttributeCategoryDeleteResp, error) {
	l := logic.NewProductAttributeCategoryDeleteLogic(ctx, s.svcCtx)
	return l.ProductAttributeCategoryDelete(in)
}

func (s *PmsServer) ProductAttributeAdd(ctx context.Context, in *pms.ProductAttributeAddReq) (*pms.ProductAttributeAddResp, error) {
	l := logic.NewProductAttributeAddLogic(ctx, s.svcCtx)
	return l.ProductAttributeAdd(in)
}

func (s *PmsServer) ProductAttributeList(ctx context.Context, in *pms.ProductAttributeListReq) (*pms.ProductAttributeListResp, error) {
	l := logic.NewProductAttributeListLogic(ctx, s.svcCtx)
	return l.ProductAttributeList(in)
}

func (s *PmsServer) ProductAttributeUpdate(ctx context.Context, in *pms.ProductAttributeUpdateReq) (*pms.ProductAttributeUpdateResp, error) {
	l := logic.NewProductAttributeUpdateLogic(ctx, s.svcCtx)
	return l.ProductAttributeUpdate(in)
}

func (s *PmsServer) ProductAttributeDelete(ctx context.Context, in *pms.ProductAttributeDeleteReq) (*pms.ProductAttributeDeleteResp, error) {
	l := logic.NewProductAttributeDeleteLogic(ctx, s.svcCtx)
	return l.ProductAttributeDelete(in)
}

func (s *PmsServer) ProductAttributeValueAdd(ctx context.Context, in *pms.ProductAttributeValueAddReq) (*pms.ProductAttributeValueAddResp, error) {
	l := logic.NewProductAttributeValueAddLogic(ctx, s.svcCtx)
	return l.ProductAttributeValueAdd(in)
}

func (s *PmsServer) ProductAttributeValueList(ctx context.Context, in *pms.ProductAttributeValueListReq) (*pms.ProductAttributeValueListResp, error) {
	l := logic.NewProductAttributeValueListLogic(ctx, s.svcCtx)
	return l.ProductAttributeValueList(in)
}

func (s *PmsServer) ProductAttributeValueUpdate(ctx context.Context, in *pms.ProductAttributeValueUpdateReq) (*pms.ProductAttributeValueUpdateResp, error) {
	l := logic.NewProductAttributeValueUpdateLogic(ctx, s.svcCtx)
	return l.ProductAttributeValueUpdate(in)
}

func (s *PmsServer) ProductAttributeValueDelete(ctx context.Context, in *pms.ProductAttributeValueDeleteReq) (*pms.ProductAttributeValueDeleteResp, error) {
	l := logic.NewProductAttributeValueDeleteLogic(ctx, s.svcCtx)
	return l.ProductAttributeValueDelete(in)
}

func (s *PmsServer) ProductCategoryAttributeRelationAdd(ctx context.Context, in *pms.ProductCategoryAttributeRelationAddReq) (*pms.ProductCategoryAttributeRelationAddResp, error) {
	l := logic.NewProductCategoryAttributeRelationAddLogic(ctx, s.svcCtx)
	return l.ProductCategoryAttributeRelationAdd(in)
}

func (s *PmsServer) ProductCategoryAttributeRelationList(ctx context.Context, in *pms.ProductCategoryAttributeRelationListReq) (*pms.ProductCategoryAttributeRelationListResp, error) {
	l := logic.NewProductCategoryAttributeRelationListLogic(ctx, s.svcCtx)
	return l.ProductCategoryAttributeRelationList(in)
}

func (s *PmsServer) ProductCategoryAttributeRelationUpdate(ctx context.Context, in *pms.ProductCategoryAttributeRelationUpdateReq) (*pms.ProductCategoryAttributeRelationUpdateResp, error) {
	l := logic.NewProductCategoryAttributeRelationUpdateLogic(ctx, s.svcCtx)
	return l.ProductCategoryAttributeRelationUpdate(in)
}

func (s *PmsServer) ProductCategoryAttributeRelationDelete(ctx context.Context, in *pms.ProductCategoryAttributeRelationDeleteReq) (*pms.ProductCategoryAttributeRelationDeleteResp, error) {
	l := logic.NewProductCategoryAttributeRelationDeleteLogic(ctx, s.svcCtx)
	return l.ProductCategoryAttributeRelationDelete(in)
}

func (s *PmsServer) ProductCategoryAdd(ctx context.Context, in *pms.ProductCategoryAddReq) (*pms.ProductCategoryAddResp, error) {
	l := logic.NewProductCategoryAddLogic(ctx, s.svcCtx)
	return l.ProductCategoryAdd(in)
}

func (s *PmsServer) ProductCategoryList(ctx context.Context, in *pms.ProductCategoryListReq) (*pms.ProductCategoryListResp, error) {
	l := logic.NewProductCategoryListLogic(ctx, s.svcCtx)
	return l.ProductCategoryList(in)
}

func (s *PmsServer) ProductCategoryUpdate(ctx context.Context, in *pms.ProductCategoryUpdateReq) (*pms.ProductCategoryUpdateResp, error) {
	l := logic.NewProductCategoryUpdateLogic(ctx, s.svcCtx)
	return l.ProductCategoryUpdate(in)
}

func (s *PmsServer) ProductCategoryDelete(ctx context.Context, in *pms.ProductCategoryDeleteReq) (*pms.ProductCategoryDeleteResp, error) {
	l := logic.NewProductCategoryDeleteLogic(ctx, s.svcCtx)
	return l.ProductCategoryDelete(in)
}

func (s *PmsServer) ProductFullReductionAdd(ctx context.Context, in *pms.ProductFullReductionAddReq) (*pms.ProductFullReductionAddResp, error) {
	l := logic.NewProductFullReductionAddLogic(ctx, s.svcCtx)
	return l.ProductFullReductionAdd(in)
}

func (s *PmsServer) ProductFullReductionList(ctx context.Context, in *pms.ProductFullReductionListReq) (*pms.ProductFullReductionListResp, error) {
	l := logic.NewProductFullReductionListLogic(ctx, s.svcCtx)
	return l.ProductFullReductionList(in)
}

func (s *PmsServer) ProductFullReductionUpdate(ctx context.Context, in *pms.ProductFullReductionUpdateReq) (*pms.ProductFullReductionUpdateResp, error) {
	l := logic.NewProductFullReductionUpdateLogic(ctx, s.svcCtx)
	return l.ProductFullReductionUpdate(in)
}

func (s *PmsServer) ProductFullReductionDelete(ctx context.Context, in *pms.ProductFullReductionDeleteReq) (*pms.ProductFullReductionDeleteResp, error) {
	l := logic.NewProductFullReductionDeleteLogic(ctx, s.svcCtx)
	return l.ProductFullReductionDelete(in)
}

func (s *PmsServer) ProductLadderAdd(ctx context.Context, in *pms.ProductLadderAddReq) (*pms.ProductLadderAddResp, error) {
	l := logic.NewProductLadderAddLogic(ctx, s.svcCtx)
	return l.ProductLadderAdd(in)
}

func (s *PmsServer) ProductLadderList(ctx context.Context, in *pms.ProductLadderListReq) (*pms.ProductLadderListResp, error) {
	l := logic.NewProductLadderListLogic(ctx, s.svcCtx)
	return l.ProductLadderList(in)
}

func (s *PmsServer) ProductLadderUpdate(ctx context.Context, in *pms.ProductLadderUpdateReq) (*pms.ProductLadderUpdateResp, error) {
	l := logic.NewProductLadderUpdateLogic(ctx, s.svcCtx)
	return l.ProductLadderUpdate(in)
}

func (s *PmsServer) ProductLadderDelete(ctx context.Context, in *pms.ProductLadderDeleteReq) (*pms.ProductLadderDeleteResp, error) {
	l := logic.NewProductLadderDeleteLogic(ctx, s.svcCtx)
	return l.ProductLadderDelete(in)
}

func (s *PmsServer) ProductOperateLogAdd(ctx context.Context, in *pms.ProductOperateLogAddReq) (*pms.ProductOperateLogAddResp, error) {
	l := logic.NewProductOperateLogAddLogic(ctx, s.svcCtx)
	return l.ProductOperateLogAdd(in)
}

func (s *PmsServer) ProductOperateLogList(ctx context.Context, in *pms.ProductOperateLogListReq) (*pms.ProductOperateLogListResp, error) {
	l := logic.NewProductOperateLogListLogic(ctx, s.svcCtx)
	return l.ProductOperateLogList(in)
}

func (s *PmsServer) ProductOperateLogUpdate(ctx context.Context, in *pms.ProductOperateLogUpdateReq) (*pms.ProductOperateLogUpdateResp, error) {
	l := logic.NewProductOperateLogUpdateLogic(ctx, s.svcCtx)
	return l.ProductOperateLogUpdate(in)
}

func (s *PmsServer) ProductOperateLogDelete(ctx context.Context, in *pms.ProductOperateLogDeleteReq) (*pms.ProductOperateLogDeleteResp, error) {
	l := logic.NewProductOperateLogDeleteLogic(ctx, s.svcCtx)
	return l.ProductOperateLogDelete(in)
}

func (s *PmsServer) ProductVerifyRecordAdd(ctx context.Context, in *pms.ProductVerifyRecordAddReq) (*pms.ProductVerifyRecordAddResp, error) {
	l := logic.NewProductVerifyRecordAddLogic(ctx, s.svcCtx)
	return l.ProductVerifyRecordAdd(in)
}

func (s *PmsServer) ProductVerifyRecordList(ctx context.Context, in *pms.ProductVerifyRecordListReq) (*pms.ProductVerifyRecordListResp, error) {
	l := logic.NewProductVerifyRecordListLogic(ctx, s.svcCtx)
	return l.ProductVerifyRecordList(in)
}

func (s *PmsServer) ProductVerifyRecordUpdate(ctx context.Context, in *pms.ProductVerifyRecordUpdateReq) (*pms.ProductVerifyRecordUpdateResp, error) {
	l := logic.NewProductVerifyRecordUpdateLogic(ctx, s.svcCtx)
	return l.ProductVerifyRecordUpdate(in)
}

func (s *PmsServer) ProductVerifyRecordDelete(ctx context.Context, in *pms.ProductVerifyRecordDeleteReq) (*pms.ProductVerifyRecordDeleteResp, error) {
	l := logic.NewProductVerifyRecordDeleteLogic(ctx, s.svcCtx)
	return l.ProductVerifyRecordDelete(in)
}

func (s *PmsServer) SkuStockAdd(ctx context.Context, in *pms.SkuStockAddReq) (*pms.SkuStockAddResp, error) {
	l := logic.NewSkuStockAddLogic(ctx, s.svcCtx)
	return l.SkuStockAdd(in)
}

func (s *PmsServer) SkuStockList(ctx context.Context, in *pms.SkuStockListReq) (*pms.SkuStockListResp, error) {
	l := logic.NewSkuStockListLogic(ctx, s.svcCtx)
	return l.SkuStockList(in)
}

func (s *PmsServer) SkuStockUpdate(ctx context.Context, in *pms.SkuStockUpdateReq) (*pms.SkuStockUpdateResp, error) {
	l := logic.NewSkuStockUpdateLogic(ctx, s.svcCtx)
	return l.SkuStockUpdate(in)
}

func (s *PmsServer) SkuStockDelete(ctx context.Context, in *pms.SkuStockDeleteReq) (*pms.SkuStockDeleteResp, error) {
	l := logic.NewSkuStockDeleteLogic(ctx, s.svcCtx)
	return l.SkuStockDelete(in)
}
